name: CI/CD Test and Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Flask Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U testuser; do sleep 1; done

      - name: Run tests
        working-directory: ./backend
        env:
          FLASK_ENV: testing
          DATABASE_URL: postgresql://testuser:testpass@localhost:5432/testdb
          PYTHONPATH: .
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -v

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test  # ✅ Waits for test to pass
    if: success()  # ✅ Only runs if tests succeed

    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/myapp
            git clone git@github.com:Chad-111/myapp.git ~/myapp
            cd ~/myapp
            git pull
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d
            docker system prune -f -a --volumes
